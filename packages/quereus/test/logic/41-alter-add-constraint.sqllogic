-- 41-alter-add-constraint.sqllogic - Testing ALTER TABLE ADD CONSTRAINT

PRAGMA default_vtab_module='memory';

-- Basic ALTER TABLE ADD CONSTRAINT test
CREATE TABLE t(x INT, y TEXT);

-- Add a simple CHECK constraint
ALTER TABLE t ADD CONSTRAINT positive_x CHECK (x > 0);

-- Test that the constraint is enforced on INSERT
INSERT INTO t VALUES (5, 'valid');
SELECT * FROM t;
→ [{"x":5,"y":"valid"}]

-- Test constraint failure
INSERT INTO t VALUES (-1, 'invalid');
-- error: CHECK constraint failed: positive_x

-- Verify state after failed insert
SELECT * FROM t;
→ [{"x":5,"y":"valid"}]

-- Add constraint with operation specifier
ALTER TABLE t ADD CONSTRAINT y_on_update CHECK ON UPDATE (length(y) > 2);

-- Test UPDATE constraint
UPDATE t SET y = 'good' WHERE x = 5;
SELECT * FROM t;
→ [{"x":5,"y":"good"}]

-- Test UPDATE constraint failure
UPDATE t SET y = 'no' WHERE x = 5;
-- error: CHECK constraint failed: y_on_update

-- Verify state after failed update
SELECT * FROM t;
→ [{"x":5,"y":"good"}]

-- Test that INSERT is not affected by UPDATE-only constraint
INSERT INTO t VALUES (10, 'hi');
SELECT * FROM t ORDER BY x;
→ [{"x":5,"y":"good"},{"x":10,"y":"hi"}]

DROP TABLE t;
